// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model sample {
  id   String @id
  name String @db.VarChar(100)
}

model Customer {
  id        String    @id @db.VarChar(100)
  name      String    @db.VarChar(100)
  email     String    @unique
  phone     String    @unique
  wallet    Wallet?
  comments  Comment[]
  likes     Like[]
  favorites Product[] @relation("favorites")

  @@map("customers")
}

model Product {
  id          String     @id
  name        String     @db.VarChar(100)
  price       Int
  stock       Int
  category    String     @db.VarChar(100)
  likedBy     Like[]
  favoritedBy Customer[] @relation("favorites")

  @@map("products")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(100)

  @@map("categories")
}

model Wallet {
  id          String   @id @db.VarChar(100)
  balance     Int
  customer_id String   @unique @db.VarChar(100)
  customer    Customer @relation(fields: [customer_id], references: [id])

  @@map("wallet")
}

model Comment {
  id          Int      @id @default(autoincrement())
  customer_id String   @unique @db.VarChar(100)
  customer    Customer @relation(fields: [customer_id], references: [id])
  title       String   @db.VarChar(100)
  description String?  @db.VarChar(200)

  @@map("comments")
}

model Like {
  customer_id String   @db.VarChar(100)
  customer    Customer @relation(fields: [customer_id], references: [id])
  product_id  String   @db.VarChar(100)
  product     Product  @relation(fields: [product_id], references: [id])

  @@id([customer_id, product_id])
  @@map("likes")
}
